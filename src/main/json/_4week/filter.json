{
  "head" : "Inlining of the 'filter' function",
  "code" : "fun filterNonZero(list: List<Int>) = list.filter { it != 0 }\n\nfun filterNonZeroGenerated(list: List<Int>): List<Int> {\n    [mark]TODO()[/mark]\n}\n\nfun main(args: Array<String>) {\n    val list = listOf(1, 2, 3)\n\n    filterNonZero(list).toString() eq \"[1, 2, 3]\"\n    filterNonZeroGenerated(list).toString() eq \"[1, 2, 3]\"\n}\n\ninline fun <T> Iterable<T>.filter(predicate: (T) -> Boolean): List<T> {\n    val destination = ArrayList<T>()\n    for (element in this) {\n        if (predicate(element)) {\n            destination.add(element)\n        }\n    }\n    return destination\n}\n\n//sampleEnd\ninfix fun <T> T.eq(other: T) {\n    if (this == other) println(\"OK\")\n    else println(\"Error: $this != $other\")\n}",
  "task" : "Write the code that the Kotlin compiler will generate while inlining the filter function (instead of calling it). Note that the compiler generates Java bytecode, but for simplicity, write the similar code in Kotlin. The simplified declaration of 'filter' is given below.",
  "platform" : "java"
}