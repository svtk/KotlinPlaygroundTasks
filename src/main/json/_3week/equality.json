{
  "head" : "Equality",
  "code" : "//sampleStart\nfun equals1(s1: String?, s2: String?): Boolean {\n    return s1 == s2\n}\n\nfun equals2(s1: String?, s2: String?): Boolean = TODO()\n\nfun main(args: Array<String>) {\n    equals1(\"abc\", \"abc\") eq true\n    equals1(\"abc\", null) eq false\n    equals1(null, \"abc\") eq false\n    equals1(null, null) eq true\n\n    equals2(\"abc\", \"abc\") eq true\n    equals2(\"abc\", null) eq false\n    equals2(null, \"abc\") eq false\n    equals2(null, null) eq true\n    val s1 = \"\"\n    val s2 = \"\"\n    s1.equals(s2)\n\n    s1 == s2       // s1.equals(s2)\n    null == \"abc\"  // false\n    null == null   // true\n}\n//sampleEnd\ninfix fun <T> T.eq(other: T) {\n    if (this == other) println(\"OK\")\n    else println(\"Error: $this != $other\")\n}",
  "task" : "Implement 'equals2' without using '==' so that it was equivalent to 'equals1'. You can call 'equals()' directly and use the reference equality operator '==='.",
  "platform" : "java"
}